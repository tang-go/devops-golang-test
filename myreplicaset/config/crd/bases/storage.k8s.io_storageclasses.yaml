---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: storageclasses.storage.k8s.io
spec:
  group: storage.k8s.io
  names:
    kind: StorageClass
    listKind: StorageClassList
    plural: storageclasses
    singular: storageclass
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          StorageClass describes the parameters for a class of storage for
          which PersistentVolumes can be dynamically provisioned.


          StorageClasses are non-namespaced; the name of the storage class
          according to etcd is in ObjectMeta.Name.
        properties:
          allowVolumeExpansion:
            description: allowVolumeExpansion shows whether the storage class allow
              volume expand.
            type: boolean
          allowedTopologies:
            description: |-
              allowedTopologies restrict the node topologies where volumes can be dynamically provisioned.
              Each volume plugin defines its own supported topology specifications.
              An empty TopologySelectorTerm list means there is no topology restriction.
              This field is only honored by servers that enable the VolumeScheduling feature.
            items:
              description: |-
                A topology selector term represents the result of label queries.
                A null or empty topology selector term matches no objects.
                The requirements of them are ANDed.
                It provides a subset of functionality as NodeSelectorTerm.
                This is an alpha feature and may change in the future.
              properties:
                matchLabelExpressions:
                  description: A list of topology selector requirements by labels.
                  items:
                    description: |-
                      A topology selector requirement is a selector that matches given label.
                      This is an alpha feature and may change in the future.
                    properties:
                      key:
                        description: The label key that the selector applies to.
                        type: string
                      values:
                        description: |-
                          An array of string values. One value must match the label to be selected.
                          Each entry in Values is ORed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - key
                    - values
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              type: object
              x-kubernetes-map-type: atomic
            type: array
            x-kubernetes-list-type: atomic
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          mountOptions:
            description: |-
              mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class.
              e.g. ["ro", "soft"]. Not validated -
              mount of the PVs will simply fail if one is invalid.
            items:
              type: string
            type: array
            x-kubernetes-list-type: atomic
          parameters:
            additionalProperties:
              type: string
            description: |-
              parameters holds the parameters for the provisioner that should
              create volumes of this storage class.
            type: object
          provisioner:
            description: provisioner indicates the type of the provisioner.
            type: string
          reclaimPolicy:
            description: |-
              reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class.
              Defaults to Delete.
            type: string
          volumeBindingMode:
            description: |-
              volumeBindingMode indicates how PersistentVolumeClaims should be
              provisioned and bound.  When unset, VolumeBindingImmediate is used.
              This field is only honored by servers that enable the VolumeScheduling feature.
            type: string
        required:
        - provisioner
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          StorageClass describes the parameters for a class of storage for
          which PersistentVolumes can be dynamically provisioned.


          StorageClasses are non-namespaced; the name of the storage class
          according to etcd is in ObjectMeta.Name.
        properties:
          allowVolumeExpansion:
            description: allowVolumeExpansion shows whether the storage class allow
              volume expand
            type: boolean
          allowedTopologies:
            description: |-
              allowedTopologies restrict the node topologies where volumes can be dynamically provisioned.
              Each volume plugin defines its own supported topology specifications.
              An empty TopologySelectorTerm list means there is no topology restriction.
              This field is only honored by servers that enable the VolumeScheduling feature.
            items:
              description: |-
                A topology selector term represents the result of label queries.
                A null or empty topology selector term matches no objects.
                The requirements of them are ANDed.
                It provides a subset of functionality as NodeSelectorTerm.
                This is an alpha feature and may change in the future.
              properties:
                matchLabelExpressions:
                  description: A list of topology selector requirements by labels.
                  items:
                    description: |-
                      A topology selector requirement is a selector that matches given label.
                      This is an alpha feature and may change in the future.
                    properties:
                      key:
                        description: The label key that the selector applies to.
                        type: string
                      values:
                        description: |-
                          An array of string values. One value must match the label to be selected.
                          Each entry in Values is ORed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - key
                    - values
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              type: object
              x-kubernetes-map-type: atomic
            type: array
            x-kubernetes-list-type: atomic
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          mountOptions:
            description: |-
              mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class.
              e.g. ["ro", "soft"]. Not validated -
              mount of the PVs will simply fail if one is invalid.
            items:
              type: string
            type: array
            x-kubernetes-list-type: atomic
          parameters:
            additionalProperties:
              type: string
            description: |-
              parameters holds the parameters for the provisioner that should
              create volumes of this storage class.
            type: object
          provisioner:
            description: provisioner indicates the type of the provisioner.
            type: string
          reclaimPolicy:
            description: |-
              reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class.
              Defaults to Delete.
            type: string
          volumeBindingMode:
            description: |-
              volumeBindingMode indicates how PersistentVolumeClaims should be
              provisioned and bound.  When unset, VolumeBindingImmediate is used.
              This field is only honored by servers that enable the VolumeScheduling feature.
            type: string
        required:
        - provisioner
        type: object
    served: true
    storage: false
