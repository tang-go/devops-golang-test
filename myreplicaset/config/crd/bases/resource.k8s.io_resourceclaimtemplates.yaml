---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: resourceclaimtemplates.resource.k8s.io
spec:
  group: resource.k8s.io
  names:
    kind: ResourceClaimTemplate
    listKind: ResourceClaimTemplateList
    plural: resourceclaimtemplates
    singular: resourceclaimtemplate
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: ResourceClaimTemplate is used to produce ResourceClaim objects.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Describes the ResourceClaim that is to be generated.


              This field is immutable. A ResourceClaim will get created by the
              control plane for a Pod when needed and then not get updated
              anymore.
            properties:
              metadata:
                description: |-
                  ObjectMeta may contain labels and annotations that will be copied into the PVC
                  when creating it. No other fields are allowed and will be rejected during
                  validation.
                type: object
              spec:
                description: |-
                  Spec for the ResourceClaim. The entire content is copied unchanged
                  into the ResourceClaim that gets created from this template. The
                  same fields as in a ResourceClaim are also valid here.
                properties:
                  allocationMode:
                    description: |-
                      Allocation can start immediately or when a Pod wants to use the
                      resource. "WaitForFirstConsumer" is the default.
                    type: string
                  parametersRef:
                    description: |-
                      ParametersRef references a separate object with arbitrary parameters
                      that will be used by the driver when allocating a resource for the
                      claim.


                      The object must be in the same namespace as the ResourceClaim.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced. It is
                          empty for the core API. This matches the group in the APIVersion
                          that is used when creating the resources.
                        type: string
                      kind:
                        description: |-
                          Kind is the type of resource being referenced. This is the same
                          value as in the parameter object's metadata, for example "ConfigMap".
                        type: string
                      name:
                        description: Name is the name of resource being referenced.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resourceClassName:
                    description: |-
                      ResourceClassName references the driver and additional parameters
                      via the name of a ResourceClass that was created as part of the
                      driver deployment.
                    type: string
                required:
                - resourceClassName
                type: object
            required:
            - spec
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
